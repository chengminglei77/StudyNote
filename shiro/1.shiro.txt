Apache shiro 提供了认证、授权。加密和会话管理功能，可为任何应用提供
安全保障-从命令行应用、移动应用到大型网络及企业应用。
	可以做一下事情：
		验证用户 对用户执行访问控制，如 判断用户是否具有角色admin
										判断用户是否拥有访问权限
				 在任何环境下使用 session API
							可以使用多个用户数据源，如一个是oracle用户库，另一个是MySQL库
				 单点登录（SSO)功能
				Remember me 服务，类似购物车的功能，shiro官方建议开启
			以上事情主要基于4大API:
				Authentication---认证，用户身份识别，常被称为用户”登录“ who are you
				Authorization  ----授权，访问控制过程，决定“谁”访问什么 who can do what?
				Seesion Management---会话管理，用户session管理器，用户相关的时间敏感的状态
				Cryptography----密码加密，把JDK中负责的密码加密方式进行封装，保护或隐藏数据防止被偷窥
	shiro包含三个核心组件：Subject,SecurityManager和Realms.
		subject是与程序交互的对象，可是人也可以是服务或者其他，统称为用户。
		所有subject实例必须绑定到一个SecurityManager上，我们与一个subject交互，
		  运行时shiro会自动转换为与securityManager交互的特定subject的交互。
		 securiyManager是shiro的核心，初始化时协调各个模块运行。
		当SecurityManager协调完毕，SecurityManager会被单独留下，且我们只需要去操作Subject
		即可，无需操作Securitymanager。但是我们得知道，当我们正与一个subject进行交互式，实质上
		SecurityManager在处理Subject安全操作。
		Realms在shiro中作为应用程序和安全数据之间的桥梁或连接器，他获取安全数据来判断subject是否能够登录，
		subject拥有什么权限。有点类似于DAO,在配置realms时，需要至少一个realm。而且shiro提供了一些常用的Realms来连接
		数据源，如LDAP数据源的JndiLdapRealm,JDBC数据源的JdbcRealm,ini文件数据圆的IniRealm,properties
		文件数据源的PropertiesRealm等等。我们也可以插入自己的Realm实现来代表自定义的数据yuan。
		像其他组件一样，Realms也是由SecurityManger控制。
	shiro框架：		
			Subject (org.apache.shiro.subject.Subject):
			简称用户，解释同上。
			SecurityManager (org.apache.shiro.mgt.SecurityManager)
			如上所述，SecurityManager是shiro的核心，协调shiro的各个组件。
			Authenticator (org.apache.shiro.authc.Authenticator)：
			用户身份验证组件，登录控制。
			Authentication Strategy (org.apache.shiro.authc.pam.AuthenticationStrategy)
			如果存在多个realm，则接口AuthenticationStrategy会确定什么样算是登录成功（例如，如果一个Realm成功，而其他的均失败，是否登录成功？）。 
			Authorizer (org.apache.shiro.authz.Authorizer) ：
			访问控制组件，决定subject能拥有什么样角色或者权限。
			SessionManager (org.apache.shiro.session.SessionManager) ：
			创建和管理用户session。通过设置这个管理器，shiro可以在任何环境下使用session。
			SessionDao (org.apache.shiro.mgt.eis.SessionDao)：
			代表SessionManager执行Session持久化(CURD)操作。
			CacheManager (org.apahce.shiro.cache.CacheManager) ：
			缓存管理器，可以减少不必要的后台访问。提高应用效率，增加用户体验。
			Cryptography(org.apache.shiro.crypto.*) :
			Shiro的api大幅度简化java api中繁琐的密码加密。
			Realms(org.apache.shiro.realm.Realm) ：
			程序与安全数据的桥梁
