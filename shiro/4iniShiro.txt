身份认证：
		shiro中需要pricipals(身份) credentials(证明)给shiro。
		principal 主体标识属性，可以是任何东西，用户名，邮箱等等，唯一即可，一个主体可以有多个pricinpals，但只有一个primary principals
		credentials 证明凭据，即只有主体知道的安全值，如密码数字证书等。
入门程序实现认证
	1.创建maven项目
	2.配置pom.xml
	<properties>
        <shiro.version>1.3.2</shiro.version>
        <log4j.version>1.2</log4j.version>
    </properties>
	 <dependencies>
            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-core</artifactId>
                <version>${shiro.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-logging</groupId>
                <artifactId>commons-logging</artifactId>
                <version>${log4j.version}</version>
            </dependency>
        </dependencies>
	3.创建log4j.properties
	log4j.rootLogger = debug,stdout

		###\u8F93\u51FA\u4FE1\u606F\u5230\u63A7\u5236\u53F0###
		log4j.appender.stdout = org.apache.log4j.ConsoleAppender
		log4j.appender.stdout.layout = org.apache.log4j.PatternLayout
		log4j.appender.stdout.layout.ConversionPattern = [%-5p] %d{yyyy-MM-dd HH:mm:ss,SSS} method:%l%n%m%n

	4.创建shiro.ini
	[users]
		cheng=conan2007
		zhangsan=123456
	5.创建测试类
	package com.cheng.shiro;

import org.apache.shiro.SecurityUtils;
import org.apache.shiro.authc.AuthenticationToken;
import org.apache.shiro.authc.IncorrectCredentialsException;
import org.apache.shiro.authc.UnknownAccountException;
import org.apache.shiro.authc.UsernamePasswordToken;
import org.apache.shiro.config.IniSecurityManagerFactory;
import org.apache.shiro.mgt.SecurityManager;
import org.apache.shiro.subject.Subject;
import org.apache.shiro.util.Factory;

/***
 *使用shiro.ini进行认证
 * @author cml
 */
public class TestShiroIniRealm {
     public static void main(String args[]){
          String username="zhangsan";
          String password="123456";
          //1.加载主配置文件user.ini，手动导入SecurityManager 因为java.lang中也有同名的
          Factory<SecurityManager> factory=new IniSecurityManagerFactory("classpath:user.ini");
          //2.创建securityManager
          SecurityManager securityManager=factory.getInstance();
          //3.将securityManager绑定到环境中
          SecurityUtils.setSecurityManager(securityManager);
          //4.创建一个主体，里面存放用户名，和密码
          Subject subject=SecurityUtils.getSubject();
          //5.在token里面存放用户名和密码
          AuthenticationToken token=new UsernamePasswordToken(username,password);
          //6.使用主体去调用shiro里面的realm去认证

          try{
               subject.login(token);
               System.out.println("登录成功");
          }catch (IncorrectCredentialsException e){
               System.out.println("密码不正确 ");
               e.printStackTrace();
          }catch (UnknownAccountException e){
               System.out.println("用户不存在");
          }
          System.out.println("是否认证:  "+subject.isAuthenticated());
          subject.logout();
          System.out.println("是否认证:  "+subject.isAuthenticated());
     }
}

	